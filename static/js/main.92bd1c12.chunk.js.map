{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","updateAccount","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","StyledButton","require","MerkleTree","button","StyledRoundButton","ResponsiveWrapper","StyledLogo","img","StyledImg","StyledLink","App","input","len","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","CONFIG","SET_CONFIG","getData","getConfig","fetch","headers","Accept","configResponse","json","config","useEffect","style","padding","backgroundColor","href","alt","src","borderRadius","border","boxShadow","marginTop","textAlign","fontSize","fontWeight","color","target","length","substring","onClick","e","window","open","margin","Number","preventDefault","abiResponse","abi","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","SmartContractObj","on","location","reload","lineHeight","disabled","newMintAmount","decrementMintAmount","incrementMintAmount","gasLimit","totalCostWei","String","totalGasLimit","mint","send","to","from","value","once","err","then","receipt","claimNFTs","transform","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.92bd1c12.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      // let cost = await store\n      //   .getState()\n      //   .blockchain.smartContract.methods.cost()\n      //   .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\nconst keccak256 = require(\"keccak256\");\nconst { MerkleTree } = require(\"merkletreejs\");\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--secondary-text);\n  width: 100px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--primary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--primary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 200px;\n  @media (min-width: 767px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  border: 4px dashed var(--secondary);\n  background-color: var(--accent);\n  border-radius: 100%;\n  width: 200px;\n  @media (min-width: 900px) {\n    width: 250px;\n  }\n  @media (min-width: 1000px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  const claimNFTs = () => {\n\n    // let addresses = [\"0x21460522F072f49AC4C3067EcA85BC662E32Be6D\", \"0x325e95dA902518075f45c850Ca290fFbDa51c4CF\", \"0x0cd6FFC99d062bBd2E1656D7e7a882FD6949BeE7\", \"0xc0feDd19a11FBf04BDC76f017f8B1B5756064a4E\", \"0x3723DA4C7B134839bCaa91AFb702cA90b15e81Bd\", \"0x96676Bd04Dae5311006acDd509508D27a81415D0\", \"0xCBcb84D9737fda3a60bE15849a50BcB714d737d3\", \"0xAa9FbF657A2b95C9a98a0eAd50b6F4B5ee669E94\", \"0xac422D5dA545bC914D59311e0948bc9d21D9AF7A\", \"0xAD9c86153aAb4226B15F95e8a6cB1D37f613E316\", \"0x588E228F4e242912Bf98D1Ef9486a49Ffd886781\", \"0x0Ce8a7A4dD77aE159520B4F6f9B5079d2aBe390F\", \"0x49E5D8724C95E02eA46CCF5E089967c2911F8668\", \"0x0DF6eB5d39fbB171e90e8d547eA654c5aB68cB84\", \"0x8060dBd8cd637De4982DF0790baA71585fCC1C6B\", \"0x5a9490c43eE7701914dE9D3970003062c0324d3f\", \"0xBD58474e8304897Cff14feFd2bFe6e1642034Ab5\", \"0x00d95a70D92d210D193A2598A37692a437D4f8B5\", \"0xD899D636a466FA524Fe10ACD95d8cbA87812ecF0\", \"0x48472F6FDa2FB5fBDa167397464dc5e3Fd691034\", \"0x7Bf06E0ccEd14442D499de4561fef20159075Ed5\", \"0x83D52cC241027f10213F5E07Ad43A81Eb84019d7\", \"0x1e8312E6cC008E668f292589F41814e9b41e4F16\", \"0x54D2bD65421aaae3C0315EFCee4D2042006A0984\", \"0xCD7DE8164A6AE8F70C4A74Ce820F2009dD036D26\", \"0x3B208832064BCaFDDE44f368C06f6489c21c47bA\", \"0x8D38a6a591e9F3903C5183fE36b294D10d760f92\", \"0x632014EFBA8bf63F768BbBaF0aB515D1244Ac164\", \"0xE10A5479Fa63EBA70b54Dff6FA26ae93A6c250E6\", \"0x11ab9463418e47fc5d9fe2a17f662adb19b295c1\", \"0x6F46A29FaAf9Db9f67037Cb564c3F35b4d5d006d\", \"0x1C66b15e600d8759dCc91ef1D0b2781f47EB5cc5\", \"0x5f75291eC865613aA0e3Dabf547071E1758e0b90\", \"0x788DdAD47aB8AdC2bE76d422e10BCE4Ff2F5f5DE\", \"0xe751F338c3028c57983D368D2ebc379B802FbB64\", \"0x9E8e0856602cF13b3bb3bDA96f434FcBf3A6Ef60\", \"0x632387b3E41F168b11FE573c02fD83F8780FdDFD\", \"0x766FCf663D1f5D49777EBbDC978faFfE58f225D3\", \"0xD13baC4f965E462Aa0486F6e59F0a88a9D0F8690\", \"0x42B2aD1a7F1e44438458Ef9125e005570E8a8224\", \"0xcD17F568F26181dbB508837fe12FD862c7A138d7\", \"0x46a9D7b2e31B73f862B251a96eF2CeA7f0a9A1Ca\", \"0x93B0D0Ee6a7d33BACd2a084B8BE524D4155FF1E2\", \"0x8Cf885F7EB6D899E95F5B686FB1D37CE0B4c8082\", \"0x033f7feF8C3f3b4d541600901911acB71eb86538\", \"0xc0Af3CA7e6D999D38b2B405AfdEB701207735cab\", \"0xe82BB86dd9D326670E55DeFB1f3C390adf51FDa4\", \"0x3671dC3F56FCc4f3BeE917e9BEb8acC3f80656ee\", \"0xE9279f0FF35c5FcC07ccBf98a472991EA125Fa32\", \"0x5115355E6D04Aec8546232f0f8c3f91FEAC2c22A\", \"0x0103c420B7F0d1Ab5B919cC3F2A862145E12Bfa3\", \"0xF9dDe76D0284Ea34bE86Da81399B4aAdD573050a\", \"0x77811b6c55751E28522e3De940ABF1a7F3040235\", \"0xae6422548A8875680B940d1719656aa516065b47\", \"0x10a874F66d5fCfd91518deE29fE39066CA21bB01\", \"0xb9A059227D62bA5bE35d3430Cad44A768f04d8E1\", \"0x2E5B447e52227FBa07919ae263D794C9c0674Bf5\", \"0x0610b2A163e6A63ABa076eEa9192cFF466Dd7349\", \"0xaF7c2EdA62767b3bD2611c6372C9F2fccd7e37A2\", \"0x1D105B8E81b7aabC302D73BACA2E36E4cEe26fB4\", \"0xE8cd1eCaf95621912e00e84Bf23DA3A9B785d5eB\", \"0x5282622605B7B596Cdd6DAF8c5DD19D6EF963B86\", \"0x5039EAc8dd5e271fbF54BD0084af45A3f8961D8E\", \"0x3166bb4db9dC598d136B385B8EeE6bB5457b8660\", \"0x5ee2706Ec21A5fC83cB850faaC8ab5AA8b8917a8\", \"0xC1abc043Ce8c281283EE3F73b1b6B1c6E7181A8A\", \"0x880F9F7802a956ed607e96b513ba1d788a46D1e5\", \"0x144902967c64F5f6B3019ba96e45B0692c97a89b\", \"0x01d7bEC05cB4ad604e59bc2cC809749E7ad20D15\", \"0xd6A63444b5E5c0241289208dc09b956148Dd19Bf\", \"0x8f28aD5c7F8343761BDbfcfab086DE8592a4305B\", \"0xe7e4193DBD90D5906F4c3972f6895b1b4a0380Ad\", \"0xF7da39546C920d42ea8AE4eCEf5A66ea444b4333\", \"0x7F2a1ada49bB63Ff1B8F8f28a310c2D59c53Ee41\", \"0x7bcEF9fe6358139f8705C3a0c749986fb875A735\", \"0x04c7d3AdccbE5C0094853bCA82038E18d47585b6\", \"0x59B1bC26DEbC32a6547Acf193f42937B8532b419\", \"0xea1546215447C1198fC63c715566875946097Bc2\", \"0x41c81cE2D8a8e9a82f2D18083d57FF912C577d9E\", \"0x0e719677Cb5679FF07858f58BFD6Fe2A8234863C\", \"0x0486Fe5C2E2876BE8Dad32375D0F7d2FBea62c8C\", \"0xFcA4275D6e9D7C62229fC268f26e99ddB96cD333\", \"0x73aFD0D663D29dB1d9122E1e87d21Ff60ddF313E\", \"0x01a10E5ADA8F1C1117F185493a0Bb4F299f7B8C0\", \"0xA636be33cc67Abcd11bce82C3B4e94b938D34A7A\", \"0x11A950CF36D45b75E006C19007722ae48d64Bf3D\", \"0x7056B6573f189A545B953907f76F31945e621055\", \"0x6C57b4fF7203a48123d0b592e71271e6bCfce6a7\", \"0x0Db77cdA2b29c43812906b6fBE02009D223A9B28\", \"0x43FB4523CEB68A1d6E9FaC58E5035697469d8FFE\", \"0x7ab7b378f690fafca3170a6beaf1447fa35224da\", \"0xE699E5771b0198eA99536cCA69aAA57bE4a7FE6D\", \"0x1FA43B28DF7Fbf7E1C1414B3F126A787d33d3F6a\", \"0xE2995D023b7844bc03ED946D536A41fF6A8e7A8a\", \"0x57140a5EC315C7193DeFA29356B1cBd9a1393435\", \"0x300daC1e46EE32E2bf4c61949486dF21e7a0C705\", \"0xfadF9BC2d7896949919BA9310e6081013b36975c\", \"0x294171C56B60aE7FaFD0A8E948bE6B48BEf01824\", \"0x6D6E8e514Ff18F508c3bCeCB7F0D9C02a4177A4E\", \"0x6BdC44C885b166aeb687f2d247E419F5a19e1804\", \"0x6bDD66a7f836B746439586ccd1e30b940C0520DE\", \"0x62F201c625743621FD97b60117dF117eB13856f2\", \"0xa82f4d2eA9a5F2091c752E3fB308423B00973ddB\", \"0x550f09bf6a5c4df927b923d196f2bbae03830408\", \"0x53aB7ef9A47eEA806701999fA08abF65bA50b6DA\", \"0x184084004843FE8c90e626697bFbf3f5a2C954d8\", \"0xD9720Aa13276437127d41FfFC109b9B6F9928415\", \"0x11872399410639E05759A4B3b9B15a61d65747DF\", \"0x55c4775Ce67CFfed0268F0230B8404E6D6E925ae\", \"0x01Fd5C7aB535e95937657beD12bf3c59726a6809\", \"0x6c80ba8AA10Da48611cc5cfc09f66dcE9B8d9A5c\", \"0xC096Bf90f06E4Dde9e07cd8FEFfC0e7F7918DcB4\", \"0xBD4f74937F4912cc9a91eB3d4372e8fAa5496c02\", \"0xb78d050187c081EdEAf5438f4379A80F3c4372c9\", \"0xE8eE572e309814e8837B53E0Efb8a3454F0Dc1cE\", \"0xa3A7F7851b11170FD93dB0291590E8EAA7A3230C\", \"0xf2877876adcd22262c22ab0b9e38c6eb9762e2cb\", \"0x1E8dd0C55A7F36570D953236388ca72F5C425A53\", \"0xC56b990d9C82F07Aa7AC6501a71FEb1885B35d5C\", \"0x0EA57A0e73e654A0C405a0B0111FDE0fe633704c\", \"0xb64ebFA527516354cAE8155A664C77ABe050cCA0\", \"0xC298ec994392361Ed5703cd44853DDc2924C1632\", \"0xc993420D0Eaf4dE88b6f6CbD4B6617EB6934382E\", \"0x5024cdC59E3a9f0102918bA1dFb2f194E954D25B\", \"0xdC0556d45e56c030E12EBbdf8Df290c46d11285A\", \"0x1e094ed9dfe65b02fd4dd14c046ac6b413d383a2\", \"0x77039399801f462b4ed13444a266b16355c471bf\", \"0x5BFeE3e27B686Cb2f02275e1b5388715e4C225Dc\", \"0x51E8B0F8e608980DCcdD3c65D66639b54327B4b3\", \"0xA7731C0e815e176c98C8d852fbb581A7b1C0933D\", \"0x8072b956e909701E89AaE558Cf4678C114FEAa74\", \"0xCaC504AB630F7C6c6c16960Ec78d57374283162E\", \"0x217fb01eBe84ab7AFca3Ff9b998D1d6533e80606\", \"0x6743B7C6B07BFA8edfffaf073268Da5b18DeD60F\", \"0x0AA98D3CdC335daCF4778E4DA043172832E1b045\", \"0xfAc031FbF7896b4ceD511E2497e92b81cc40044b\", \"0xD46265595Ab2097E31B30461d5C6B0348bD96301\", \"0xD99c493F1b46634409681c9c510E9899Ba8B2B99\", \"0x613A0ac4968F042b773880b0173bBbBba2fec6D9\", \"0xC4627a8C4973bBD61b2A14F3D2DCf06b936594a4\", \"0x5d774ED728d4170935442B2D0CF4DFDE9800517E\", \"0xE958fee31899f94Ca7f13961C8385564fd1516E7\", \"0xB3F6e34D2A9Cd604aEA436796D1D99DbfC9E3162\", \"0xA31a661FA0247e04499291C98c57ca23dC2d26DB\", \"0xa1F6A4357aa8f9c92A2fC40B3FA0227A4e9C77C6\", \"0x5c71976BC21EFC15434c89E3eA49621fd0D03031\", \"0x1428FCFD5fa8C286f3c64fBd138Edea5b6f3Fffb\", \"0xe0991e62dA490A6096bE1D3758000F8eD06CA55f\", \"0xb366fdB2b665644524df762bd09c87FA3f6D7be4\", \"0x366462A42EBd88578f8df4F800f9797F094EDADC\", \"0x59B3A0732410e9Ab035d3D9418cAe64932310935\", \"0xF6D8E3Bf712296Fc5d2753515f08E09eE8828421\", \"0xd0fcBF9c855E8760f933E235F372084560421692\", \"0x606B54306a571D11613fECf31854EE7f452FdD8c\", \"0x6efd61568aa910c721196a4758E967f2ca3851A7\", \"0x8A6961E70f15c308b15Dd84C9CC319dA8FBb6Fdd\", \"0x4Fd0fF2C49671D4fE1927371cf833E8b3B7f44eA\", \"0xa8A65A80cCE69e876f56239f4d504fAC926DceAD\", \"0x7ED24e227DAf698aFf27E5aDFC1Af1b4b4d82ebd\", \"0xB1e287f7825914EB5C036b2E987DbcEb80043e30\", \"0xF362B1e843Ab5F6605955193D260f3FF28ef0024\", \"0x208714f800Bb2F6CeacC1665Af03e4488c0a50a7\", \"0xdfFDD83bAEFD023Ce78CbD6e4a2b94Bb0d16aDFD\", \"0xbB9227F9380f110631AC9f736e2E71Cb4D17B5dd\", \"0xf9c33e82fdf57016a1d11a1231560e89c3f406db\", \"0x8cD35372152B402b1315eD9B0f4980e63544c002\", \"0x1FD8EbBF3b768Ffcf34f0b5748AEaDFfd85fBB08\", \"0x84a064AEC93e444912A6b62887d6B800a80eeE70\", \"0x9c6FD546D6f81Efbe1aAE0C7a2b5BF4E690BEE98\", \"0x2885e8073a107127aD7173918500A5a5BAc2bB93\", \"0xCe0a00d79De483774aC319De29E06AAD67DE1dC3\", \"0xB237B1D8fd5DF3762633bCC676631FbbB726D377\", \"0xe3d67194e7884982C6D71E180C5326379563596e\", \"0xbFC4460eF3d8fD49902FB831E73e304B0947ce59\", \"0x348788ae232F4e5F009d2e0481402Ce7e0d36E30\", \"0x0Ca0C8500a1f7692d276Ef4ae7b128a88B8D1246\", \"0xc324C990642629b7Fb38c4d63CF1A74856244a03\", \"0x7bdA49b7cF915d46E89587D03033d96C7B135E37\", \"0x41C4DA71429C9a156Bbde925949A2842DE98c2c5\", \"0xCE06091Ef425161EA0F0194dE492486206c7a3A3\", \"0x2401143463F13b70a3F1d5fa83beB94021406DBA\", \"0xc7F3f9E8c747b98945CA1CE36B2a30410F3cf541\", \"0x8f458f7d25AD4fD8B9a3a701b3853E665d9108FF\", \"0x283563A0Ea563fd34bdc7f59415c7E3FB82C83Ee\", \"0x1F1E699cbB6686E4C5F69A7Ba0973e84e66178AD\", \"0xE74B2833635d19155CA6FB9A1AA399b7856c4a8F\", \"0x4CF0eAD5f1D6F961867BDd99502C8426A46eC92F\", \"0xF3ACa86426Ff81E1B5B95B7779350d329fe12308\", \"0x6066A24af17d1BF479A33cd51ad4a82119e40A49\", \"0x90f3490B7AbCe5956EbB4B0A375e5A5F17E7Df5e\", \"0xa8d47c96e338823d51c8825f0a1d6fce7348fe4d\", \"0x0a0ccc73B18684d7C0278e477D19Dc51bB5fE159\", \"0xCC733B12AB73dc285577613e9cE47c65f2925573\", \"0x0B109a4135A20E1942402a238528B7C3CC69B517\", \"0x2113D3Cf72d7712c9f14375768a0E705ac594AdE\", \"0x49043297F0D93C2Ce2cdd7eC5868E03c22F1c132\", \"0x87EFA5A9ABb1e0D5980509866377C34BA6d6cB9F\", \"0x128c944911aBaD8F9fd92f1f0FC2c18ab325c90F\", \"0x040FC4f814321242c4E19114cFD7493BEbB3B121\", \"0x1F2CD6DC3564D065F684ae66422e06eD27c90856\", \"0x36340a97035b4669060aFfCbb20208ead79BA1d8\", \"0x093C2892ed6340897232f3a2Af588760B81D0645\", \"0x683e9e721cb39abe1da06631a60367147ad220af\", \"0x2519c3a03aE90e9D3dbDC76ADCa56Dd3125fC8D7\", \"0x5a2b4a64Edb62A08291176362edcc5C74f2dE76D\", \"0x913cBFF9AFf1F3DfBB25e69175068c22f7650418\", \"0xA1574395995686Fe629237094897C4b022794383\", \"0x0F34E9EC6971eBb89EbAB75e9fd194ac6295a194\", \"0x3005CC0e7ABC86e4a2c6EE382C3D698d18eD8425\", \"0xe921d61118139f2b3acC068e5443F72D25f193fd\", \"0x95131deCb7CE982308Bcd5182920c1f7FEca1d23\", \"0x6e757de23ce09146ae3996343afb0980dc243db1\", \"0x26b56F799AE703BF603e10828166E1E37425D4D5\", \"0x556681899DBB90a2E9b379f8E2929F7b558069BE\", \"0x2965cb707a840EDBdC1c6205aD98Fe7651a39abd\", \"0x606547CFF876919A67F9f1EEA9921cE71e0Fd27A\", \"0x4D98621b69DF926AABBA5341f9F6351fa28CD320\", \"0xb07b5927b67D853511c671d2143Cd130BCe3410D\", \"0xFb0F7f530eB95A91421D9E8188f18C76ec7Bc119\", \"0x8dBa3864C7Bb6754C82e2a89611A9Ba1c51EB249\", \"0x2B0eD08bCb24683b7D144132eF4bDD23487df936\", \"0x49379EFAE465C8d420357142477C09386Cc1e764\", \"0x35Ab922bF4E5D4040905a11d6526a928cFdF4Ef5\", \"0x183D91C5FCC6Ff05570dd94A4A5844fdB798ce3E\", \"0xe7DF774e1648ad0A015a30e1d6d5067F6436dd14\", \"0x56B47aB6A94737D9d658bC3eE358455fAA520662\", \"0x70e0673Cc0Cd9FFa673AC542Aa75a5114E094007\", \"0xe41056EEBF24283717B540fde7B3Fcd2D53F27bE\", \"0x3d023ECA8071e8D6C255B55144572926DbB42cEC\", \"0xc961fD58BEAC10002361aC6bC549AA7Ea13f9c0d\", \"0x8B37A635d28B2653A7ba973B95620B421BA1AA73\", \"0x5b9eC5222d3E5A4B072e8E25aA724d505EE627d5\", \"0xeDf55b8F4C48c6ab7CE40c2A806a8c7216Cd0cC2\", \"0x97CA20e35Bc62945B864f4B86A030b77Ae25A804\", \"0x4f791582FC07e6aE819e4c010450D9A07cC2b03e\", \"0x5e070D8Ef6c2c5966f977d8330eEAd5CAB324aB6\", \"0xE914b7D53eCb5f956E8Dba8e78487BfAfE1267eD\", \"0x362e45eeaaDf401E39065958CC9b8F1D98430237\", \"0xC32E01b7041F7d3c45569d23998a1556c97491eA\", \"0x016f6EDd6dd1Cbd0cb2aa22C3d8152C79C68ed63\", \"0xd0aE55E84524E3C405497d86f5de01cfE4504c53\", \"0xD502d966f2B50e4C1768efFe99D4C7C90C3a7625\", \"0xAdD689774e695501cfA7b52565fd8408621fA002\", \"0x3bE1A4Ebcb73050a843354cfc1Acf36106F5E143\", \"0x136f2BE2d039FEC181173020ee3fF7296c83E7B3\", \"0x32773d687E02a55a9D25D0fFD282A400EB71b12c\", \"0xA10902C668bF73De06471adeF3E47cf56f00602B\", \"0x83b3b4ba93e2c763295a04ab347e050d6479dae7\", \"0xF56325b7ae7d23df5A82e05a2376ed4F0DB1387C\", \"0x38e9bFB1223b5606261E796eab6A5Af3e0ec5E8E\", \"0xfC577505e89c3B1812CC723F506689938Bf84698\", \"0x8F8Dd48eaECcE35aFd63DCD6C70F483C64DD54Ec\", \"0x4fb01f0228a718f3a1Aca2De533D9a9078393c2e\", \"0x46b25De482DB8f71E7BEdd2BCE5f87A4b53fEeA7\", \"0x8Ace24CB34179F1f860AC0439154DCe56488b5D7\", \"0x6ed4dA50C616AD17Bd704FDeBe845eb227C062eD\", \"0xBb659824Ce01580bfDeF7DE9a3ecf5823e66729C\", \"0x54793c8f80F642Ed4e200177bf845c61915EBc55\", \"0x72e680156324b5AFA5d0D84B621844424A8BCe42\", \"0x024774723a2E70db590bf7880f68C34F92D222Fd\", \"0x429AF9695a3936E2F22D05694775d12237f2723a\", \"0x7198754A0c231733c55DeA90Fd73FbE4DE802d7E\", \"0xCac80A24eDc9BC281FF42357b5A10B41171934Ee\", \"0x4aC23e0885e68E3D4c3c46267CBCC1cf28aacb4C\", \"0xd92b28c30BAC6DD79ff59dbc469d3FC2d1600ad5\", \"0x6e6da4ef4016121b5e43216c1bd1263ceeef0d7d\", \"0xbd7628E86c404Af773a3903Ff268d48073F14762\", \"0xfa570016C44beC0140fb1f4D8275ec242e5dB20b\", \"0xe19835368BB230aFD3953743EB43111421A92980\", \"0x62B4bCaFe045048916632a35A5DF563790eEBf81\", \"0x4a1e08fd3F46B08c564Edcd68171c70925ae5C54\", \"0xF780Cb93Fd8ae8B8f9A0B8cB64c7A841067d870B\", \"0xc71488da026be2530152f9783d7d81912de2b769\", \"0x66Af9E0005166fD3631a5beAbb6C4eDdF3a65312\", \"0xf361c12F62bCAA20289BceF3d05a04680D47798F\", \"0xF81d3a15CA9237490B1c2DDd0f085B93a26eD15f\", \"0x78D6BA5786eF3539925FABA10784888c411Ccafc\", \"0x901C1b59b1CA6D8bEA973101A8532B02957935E6\", \"0xe33EfcA85b94D53a462e81cfd1D5E64855aeb5DF\", \"0x2B3147A215630ec9F22344CA19944A9ec5Cd4158\", \"0xa883cdbdd6c16c505d22a6f3b2cd1d2ee9f1084f\", \"0xE9a6049F31cecB2Fe1ffb579403601e208F9FaF1\", \"0xf5467a335D5ec215375749e89D2795d937De59B0\", \"0x8e8b87C298221AF893E75b6Fe84197cEEBbEbC29\", \"0xBC8bf3Af9DAc67a0c4A5fc9aECBaaA2527a147fc\", \"0xB1540C097BCD82a84C752625d2C8Bafa41e03a40\", \"0x25DAeDf1FA860C10b14e5EbF0DE47De51abd8813\", \"0xd5306BaDfD03EF9655AF4a4190F7406CA0E39b56\", \"0x71e63B38995E9E7854eB043eaCa6baaf5E5f3ad4\", \"0x0aC55C453a42B501edff8211D8389a7BaCA860Ff\", \"0x37d31BE0256F89cA672A7F9bd937FdD98AE79c83\", \"0x15427cfd7A251FF28aB6651e8656Fd155B0c65B9\", \"0x3C01D62A2D3c10b40548003AE3918113203a59DA\", \"0x8be8f0Ec8547Dd725658bFE1119F730A3802ac8e\", \"0x0bB9e9C760dB4Bc1c04E776EA5FF7be234cD3566\", \"0xA116583225aB2768Fc6ebE9E305DE17f657e8921\", \"0xDaCB12307F57a9f0f8861E15F8B1a00B46E64022\", \"0x36B8482D50192962dBDD47A9f92C8fA09a370C62\", \"0xB5129A706Fa780a2a6045dA870b51e5F0888611c\", \"0xedF05534554e3F104b4B6d486f53f05183838E43\", \"0x31468f67B60e333AB0Fd35F8555Ae3EdD7E4135F\", \"0xfF5F6A455eB48b3475d11A6DB686935aaa36D31C\", \"0xDBa1C8cc0Bf243d80B265A4127384E40A0901aAB\", \"0xEA6bd2203BE459fbE706232b6E627c61a1b75b96\", \"0x7AfAE0bF9548FD65c434b5F47c20D0f56718d9F5\", \"0xc47eEF9c35625bdf3030fE7a005F5fA7Bc62879d\", \"0xEe722B300D07D4d7122c9518f7A9CdD7A4cF9cd6\", \"0x9425E212647518853a92ae7D2C1Ab09D343e70b6\", \"0x3Fe4fcD6573f0b7Af4925BB7d30Eb1C590cDF9f3\", \"0x4519e022ed8845c9a850B8D274429a0C4A94df57\", \"0xd5D85c17f12b2350bA2772724Fcd8851d1c76B07\", \"0x145d6347a7fc834eec5fe1cce9c1a285ec216139\", \"0xE85C8A661aaB6D488a7CF03665B34Bcf2a6F93Cc\", \"0xE330c4f81D9aE18fABC203DF14d84Fe94addE27B\", \"0x06443760b9FC204429963949e6F01645ccF81cAf\", \"0xA98901163460F6FAA6F85bB7C2A7C6a0f033A969\", \"0x93c22236CEc86c4451bf266218f8aB6216D7866f\", \"0xC5301285da585125B1dc8CCCedD1de1845b68c0F\", \"0x6073b7411205d3fF4D3D8DcC52F01D3059c12670\", \"0x4690751D10996F774BdD7787F5d50AB3F8153031\", \"0x83D14B17bd1b3B72784F4a5635A4C0adb4dB20F9\", \"0x8031Cb0A28E18c556F19bfc74cfe3009c9325a78\", \"0xe5611a1de1c340cba0bc509c59835c769d386dd0\", \"0xA0B6ef0729832a7Ad0e973B1b18E801D50D51c8b\", \"0x28f6928614c2cC9099349a64b5a20924A18dbA86\", \"0xb3220d752055D46a16Aea883d967DA3D5fFd3d03\", \"0x14B8a47A8cd614268fC11635e543b914DF025E63\", \"0x7bec1f0da3a202231ee03d073ca094ae7a3a00e0\", \"0x3dd84d4C28bD18d291ecF9F2a57b0Ce96c48cc0B\", \"0x3261A7Ec2DAbbeb1a03561d06E6F61ffa03AE74C\", \"0x78cE501F95a78e9f517901C554A120fB456f249B\", \"0xd9E20C744Eb842EC16ed2EDcfC78fD7166687eae\", \"0x942883b3Ab906C9e62E369f07272184142Aef38E\", \"0x75a3d39Cbc483167929F59B9146ff61999475395\", \"0x472062CA06d5B89452A705EDDd665D926b2e8374\", \"0x8EcCBE0ef3318D43A7C7c29553d23B2a8c47b512\", \"0xb1E8d8CD4bbe9c61327553Ceb450429f2cc6E270\", \"0x1F3129eAbc2dC7007abBc0d41aC7f5D5C17Da0ba\", \"0x43aa888c7bA5c01E44bb10EB171522FEc9b3b7f3\", \"0x901421088b9B597b2F94cEDb0C868031cBBA8b7C\", \"0x4cEA643706ACc07dDC9b58570A55c6e86d281e73\", \"0x8Bb5079eEd118FB22405Da9aF46349b21F886675\", \"0xe9eb553ed8761464f05FeC99f9dA85BeD2806221\", \"0x797c940f42d5387781b5DdEB39B645986e137FC5\", \"0xCE0fd2d1C11fEe29c0a2eb519d24084AC6A185fA\", \"0x1e6983bFb562FABB134F47a319b9853407170455\", \"0xBC2Dda59121652Ab32fc619CdC73c572d103a7cc\", \"0xb3FECc0909B410B01E3c25E6f131bf31173532E8\", \"0x0Fb19CbbcFAcE7F005f11E7DE9C5AF0Eef919fCA\", \"0x315DCc4D2a0c6e27B52cf06942789548752C4144\", \"0x5E9077d5043142665f5c4A1D9EbF060A1EC2Af28\", \"0xF9E488702C27D064A6EF3ea16F73D779b53F775c\", \"0xa6EA6628aF28BE8213623de80634225C28B3cFCB\", \"0x36a142534354a5d9C71100773883C92400889F16\", \"0xc7d1AF12c396dbf1c63950Af77DB169B77224A8A\", \"0x2972964e78Db36665c233678DfdF8BB57AeC3f94\", \"0x99b25de1eEbD977d35B9653499f810BD5175B349\", \"0xED4aF4eC3f45b998e2D414C59B9bcf1C0DeD43fe\", \"0x03BdD341E05C536Cb18De2C532E443bD5e704f73\", \"0x2aB5D9f2b963d3d161756f74A60D530188087bfe\", \"0xDe36365432b9701BA2bac9De8C16A699493bDC81\", \"0x8CB416fDB214BC9D030C2Ff6Bb4d8eB2201F116c\", \"0xAA4ef780af3D736a9e1256cE4611D046dc6055Fe\", \"0x79fda1dfe7d2f06ef08b4e5071bc9c21a8a4808e\", \"0xfECF9f3F5504228298B577e0261AC9f0D7A6fB8f\", \"0x046365f93faAb32AC5146476F362877dA4653848\", \"0xfD77c0C95652610FdEb408303eBeD795223Eb3A6\", \"0x13B9677Ec73c02c477E1bD4Dbec685C544E1EC68\", \"0xD7D5dDaE79e9e3c11C049528Ac68C75BB8459c29\", \"0xcf46d7DeF9a16966661506EcD9f2235Cfa166377\", \"0xAd9fd3F278132b7129BF1d0f2F2a42Ff59A56843\", \"0x35786424D13259E183D7Facb355773Dd2cA1ED67\", \"0x379Ec4FB9baC5d7A93cB318d1F2C5bC6Cd4d87Ca\", \"0x9fCD3cF9c289374590699aA633c0DFD268A7C1FD\"];\n    // const leaf = addresses.map(addr => keccak256(addr));\n    // const Merkletree = new MerkleTree(leaf, keccak256, { sortPairs: true });\n\n    // const rootHash = Merkletree.getRoot();\n    // const adddd = keccak256(blockchain.account);\n\n    // const proof = Merkletree.getHexProof(adddd);\n\n    // console.log(Merkletree.toString());\n\n\n    let cost = CONFIG.WEI_COST;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .mint(mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > 50) {\n      newMintAmount = 50;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    <s.Screen>\n      <s.Container\n        flex={1}\n        ai={\"center\"}\n        style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\n        image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg.png\" : null}\n      >\n        <a href={CONFIG.MARKETPLACE_LINK}>\n          <StyledLogo alt={\"logo\"} src={\"/config/images/logo.png\"} />\n        </a>\n        <s.SpacerSmall />\n        <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg alt={\"example\"} src={\"/config/images/example.gif\"} />\n          </s.Container>\n          <s.SpacerLarge />\n          <s.Container\n            flex={2}\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{\n              backgroundColor: \"var(--accent)\",\n              padding: 24,\n              borderRadius: 24,\n              border: \"4px dashed var(--secondary)\",\n              boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\n            }}\n          >\n            <StyledImg alt={\"example\"} src={\"/config/images/stroker.png\"} />\n\n\n            <s.TextTitle\n              style={{\n                marginTop: 50,\n                textAlign: \"center\",\n                fontSize: 50,\n                fontWeight: \"bold\",\n                color: \"var(--accent-text)\",\n              }}\n            >\n              {data.totalSupply} / {CONFIG.MAX_SUPPLY}\n            </s.TextTitle>\n            <s.TextDescription\n              style={{\n                textAlign: \"center\",\n                color: \"var(--primary-text)\",\n              }}\n            >\n              <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\n                {truncate(CONFIG.CONTRACT_ADDRESS, 15)}\n              </StyledLink>\n            </s.TextDescription>\n            <span\n              style={{\n                textAlign: \"center\",\n              }}\n            >\n              <StyledButton\n                onClick={(e) => {\n                  window.open(\"https://www.discord.gg/strokers\", \"_blank\");\n                }}\n                style={{\n                  margin: \"5px\",\n                }}\n              >\n                Discord\n              </StyledButton>\n              <StyledButton\n                style={{\n                  margin: \"5px\",\n                }}\n                onClick={(e) => {\n                  window.open(CONFIG.MARKETPLACE_LINK, \"_blank\");\n                }}\n              >\n                {CONFIG.MARKETPLACE}\n              </StyledButton>\n            </span>\n            <s.SpacerSmall />\n            {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  The sale has ended.\n                </s.TextTitle>\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  You can still find {CONFIG.NFT_NAME} on\n                </s.TextDescription>\n                <s.SpacerSmall />\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                  {CONFIG.MARKETPLACE}\n                </StyledLink>\n              </>\n            ) : (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  1 {CONFIG.SYMBOL} costs {CONFIG.DISPLAY_COST}{\" \"}\n                  For VIP Strokers.\n                </s.TextTitle>\n                <s.SpacerXSmall />\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  Excluding gas fees.\n                </s.TextDescription>\n                <s.SpacerSmall />\n                {blockchain.account === \"\" ||\n                  blockchain.smartContract === null ? (\n                  <s.Container ai={\"center\"} jc={\"center\"}>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      Connect to the {CONFIG.NETWORK.NAME} network\n                    </s.TextDescription>\n                    <s.SpacerSmall />\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                      }}\n                    >\n                      CONNECT\n                    </StyledButton>\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                          }}\n                        >\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n                  </s.Container>\n                ) : (\n                  <>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      {feedback}\n                    </s.TextDescription>\n                    <s.SpacerMedium />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledRoundButton\n                        style={{ lineHeight: 0.4 }}\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          decrementMintAmount();\n                        }}\n                      >\n                        -\n                      </StyledRoundButton>\n                      <s.SpacerMedium />\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--accent-text)\",\n                        }}\n                      >\n                        {mintAmount}\n                      </s.TextDescription>\n                      <s.SpacerMedium />\n                      <StyledRoundButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          incrementMintAmount();\n                        }}\n                      >\n                        +\n                      </StyledRoundButton>\n                    </s.Container>\n                    <s.SpacerSmall />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          claimNFTs();\n                          getData();\n                        }}\n                      >\n                        {claimingNft ? \"BUSY\" : \"BUY\"}\n                      </StyledButton>\n                    </s.Container>\n                  </>\n                )}\n              </>\n            )}\n            <s.SpacerMedium />\n          </s.Container>\n          <s.SpacerLarge />\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg\n              alt={\"example\"}\n              src={\"/config/images/example.gif\"}\n              style={{ transform: \"scaleX(-1)\" }}\n            />\n          </s.Container>\n        </ResponsiveWrapper>\n        <s.SpacerMedium />\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\n          <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n            }}\n          >\n            Please make sure you are connected to the right network (\n            {CONFIG.NETWORK.NAME} Mainnet) and the correct address. Please note:\n            Once you make the purchase, you cannot undo this action.\n          </s.TextDescription>\n          <s.SpacerSmall />\n          <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n            }}\n          >\n            We have set the gas limit to {CONFIG.GAS_LIMIT} for the contract to\n            successfully mint your NFT. We recommend that you don't lower the\n            gas limit.\n          </s.TextDescription>\n        </s.Container>\n      </s.Container>\n    </s.Screen>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}